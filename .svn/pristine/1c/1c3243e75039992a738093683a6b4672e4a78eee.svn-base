using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations.Schema;

namespace SIM.Data.Models.Catalog
{
    public class Product
    {
        [Key]
        [Required]
        public string MPN { get; set; }

        public string? Barcode { get; set; }

        [Required]
        public string Title { get; set; }

        public string? GroupName { get; set; }

        #region Foriegn Keys
        [Required]
        public int SupplierId { get; set; }
        public int BrandId { get; set; }
        public int? ColourId { get; set; }
        public int? SizeId { get; set; }
        public int? VatRateId { get; set; }
        public int? Category1Id { get; set; }
        public int? Category2Id { get; set; }
        public int? Category3Id { get; set; }
        public int? GeoId { get; set; }
        public int? SpecId { get; set; }
        public int? ShortDescId { get; set; }
        public int? LongDescId { get; set; }
        #endregion

        public ProductType ProductType { get; set; }

        public GenderOrAgeGroup? GenderOrAge { get; set; }

        public string? Weight { get; set; }

        public string? Images { get; set; }

        public string? VideoUrl { get; set; }
        public string? SupplierDetailsUrl { get; set; }

        [DefaultValue(1)]
        public int BoxQty { get; set; }

        [Precision(18, 2)]
        public double? Cost { get; set; }

        [Precision(18, 2)]
        public double Price { get; set; }

        public int? Year { get; set; }

        public ProductStatus Status { get; set; }

        #region NAVIGATION

        [ForeignKey(nameof(SupplierId))]
        public virtual Supplier Supplier { get; set; }

        [ForeignKey(nameof(BrandId))]
        public virtual Brand Brand { get; set; }

        [ForeignKey(nameof(ColourId))]
        public virtual Colour Colour { get; set; }
        
        [ForeignKey(nameof(SizeId))]
        public virtual Size Size { get; set; }

        [ForeignKey(nameof(VatRateId))]
        public virtual VatRate VatRate { get; set; }
        
        [ForeignKey(nameof(Category1Id))]
        public virtual Category Category1 { get; set; }
        
        [ForeignKey(nameof(Category2Id))]
        public virtual Category Category2 { get; set; }

        [ForeignKey(nameof(Category3Id))]
        public virtual Category Category3 { get; set; }

        [ForeignKey(nameof(GeoId))]
        public virtual Geometry Geo { get; set; }

        [ForeignKey(nameof(SpecId))]
        public virtual Specification Spec { get; set; }

        [ForeignKey(nameof(ShortDescId))]
        public virtual ShortDescription ShortDescription { get; set; }

        [ForeignKey(nameof(LongDescId))]
        public virtual LongDescription LongDescription { get; set; }
        #endregion
    }
}
