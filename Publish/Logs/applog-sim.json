{"Timestamp":"2025-07-10T11:28:30.9023347+01:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","TraceId":"9305b4ba54c959c63f26330219b2d5ed","SpanId":"48db55368027b36e","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","SpanId":"48db55368027b36e","TraceId":"9305b4ba54c959c63f26330219b2d5ed","ParentId":"0000000000000000","RequestId":"40000002-0011-ff00-b63f-84710c7967bb","RequestPath":"/","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:15:32.5632775+01:00","Level":"Warning","MessageTemplate":"Failed to determine the https port for redirect.","TraceId":"ee7c6c8e44f96815d794a71a724c589c","SpanId":"e47fe60aad98850f","Properties":{"EventId":{"Id":3,"Name":"FailedToDeterminePort"},"SourceContext":"Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware","SpanId":"e47fe60aad98850f","TraceId":"ee7c6c8e44f96815d794a71a724c589c","ParentId":"0000000000000000","RequestId":"40000009-0000-ff00-b63f-84710c7967bb","RequestPath":"/api/Catalogue/Barcodes","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:43.5218093+01:00","Level":"Information","MessageTemplate":"starting giant import for type Both and year ALL","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Controllers.ImportController","SpanId":"78b0e9a7ced9df77","TraceId":"15755257c7ae54a5c73da94ea69f1076","ParentId":"0000000000000000","RequestId":"4000000d-0000-ff00-b63f-84710c7967bb","RequestPath":"/api/Import/Giant","ActionId":"d72d5dc7-a457-4da7-af28-4d07fdc7470b","ActionName":"SIM.Controllers.ImportController.Giant (SIMAPI)","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:43.5221743+01:00","Level":"Information","MessageTemplate":"import started for year 2018","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Controllers.ImportController","SpanId":"78b0e9a7ced9df77","TraceId":"15755257c7ae54a5c73da94ea69f1076","ParentId":"0000000000000000","RequestId":"4000000d-0000-ff00-b63f-84710c7967bb","RequestPath":"/api/Import/Giant","ActionId":"d72d5dc7-a457-4da7-af28-4d07fdc7470b","ActionName":"SIM.Controllers.ImportController.Giant (SIMAPI)","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:43.5238449+01:00","Level":"Information","MessageTemplate":"getting giant bikes from api.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:45.8585585+01:00","Level":"Information","MessageTemplate":"giant bikes found 0","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:45.8587432+01:00","Level":"Information","MessageTemplate":"getting liv bikes from api.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:47.3442850+01:00","Level":"Information","MessageTemplate":"liv bikes found 0","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:47.3444672+01:00","Level":"Information","MessageTemplate":"getting cadex bikes from api.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:49.4117669+01:00","Level":"Information","MessageTemplate":"cadex bikes found 0","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:49.4120057+01:00","Level":"Information","MessageTemplate":"starting conversions to db models","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:49.4120689+01:00","Level":"Information","MessageTemplate":"converting giant bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:51.7789682+01:00","Level":"Information","MessageTemplate":"converting liv bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:52.2461716+01:00","Level":"Information","MessageTemplate":"converting cadex bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:52.6492889+01:00","Level":"Information","MessageTemplate":"conversions completed","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:52.6496731+01:00","Level":"Information","MessageTemplate":"begin insert or update for bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Logic.ImportLogic","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:52.7408947+01:00","Level":"Information","MessageTemplate":"db insert/updates completed","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Logic.ImportLogic","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:52.7417522+01:00","Level":"Information","MessageTemplate":"getting giant gear from api.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:55.6521610+01:00","Level":"Information","MessageTemplate":"giant gear found 494","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:55.6523190+01:00","Level":"Information","MessageTemplate":"getting liv gear from api.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:57.9581804+01:00","Level":"Information","MessageTemplate":"liv gear found 61","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:17:57.9583319+01:00","Level":"Information","MessageTemplate":"getting cadex gear from api.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:00.2774248+01:00","Level":"Information","MessageTemplate":"cadex gear found 53","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:00.2776284+01:00","Level":"Information","MessageTemplate":"starting conversions to db models","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:00.2776710+01:00","Level":"Information","MessageTemplate":"converting giant bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:00.6881274+01:00","Level":"Information","MessageTemplate":"converting liv bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:01.0647308+01:00","Level":"Information","MessageTemplate":"converting cadex bikes","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:01.6180001+01:00","Level":"Information","MessageTemplate":"conversions completed","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Suppliers.Giant.GiantDataImportService","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:01.6185280+01:00","Level":"Information","MessageTemplate":"begin insert or update for gear","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Properties":{"SourceContext":"SIM.Logic.ImportLogic","ApplicationName":"Supplier Integration Module"}}
{"Timestamp":"2025-07-11T07:18:02.7937433+01:00","Level":"Error","MessageTemplate":"Connection ID \"{ConnectionId}\", Request ID \"{TraceIdentifier}\": An unhandled exception was thrown by the application.","TraceId":"15755257c7ae54a5c73da94ea69f1076","SpanId":"78b0e9a7ced9df77","Exception":"Microsoft.Data.SqlClient.SqlException (0x80131904): The MERGE statement attempted to UPDATE or DELETE the same row more than once. This happens when a target row matches more than one source row. A MERGE statement cannot UPDATE/DELETE the same row of the target table multiple times. Refine the ON clause to ensure a target row matches at most one source row, or use the GROUP BY clause to group the source rows.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, SqlCommand command, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlCommand.InternalEndExecuteNonQuery(IAsyncResult asyncResult, Boolean isInternal, String endMethod)\r\n   at Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)\r\n   at Microsoft.Data.SqlClient.SqlCommand.EndExecuteNonQueryAsync(IAsyncResult asyncResult)\r\n   at Microsoft.Data.SqlClient.SqlCommand.<>c.<InternalExecuteNonQueryAsync>b__193_1(IAsyncResult asyncResult)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteNonQueryAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteNonQueryAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteNonQueryAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlRawAsync(DatabaseFacade databaseFacade, String sql, IEnumerable`1 parameters, CancellationToken cancellationToken)\r\n   at EFCore.BulkExtensions.SqlAdapters.SqlServer.SqlServerAdapter.MergeAsync[T](DbContext context, Type type, IEnumerable`1 entities, TableInfo tableInfo, OperationType operationType, Action`1 progress, Boolean isAsync, CancellationToken cancellationToken)\r\n   at EFCore.BulkExtensions.SqlAdapters.SqlServer.SqlServerAdapter.MergeAsync[T](DbContext context, Type type, IEnumerable`1 entities, TableInfo tableInfo, OperationType operationType, Action`1 progress, Boolean isAsync, CancellationToken cancellationToken)\r\n   at EFCore.BulkExtensions.SqlAdapters.SqlServer.SqlServerAdapter.MergeAsync[T](DbContext context, Type type, IEnumerable`1 entities, TableInfo tableInfo, OperationType operationType, Action`1 progress, CancellationToken cancellationToken)\r\n   at EFCore.BulkExtensions.SqlBulkOperation.MergeAsync[T](DbContext context, Type type, IEnumerable`1 entities, TableInfo tableInfo, OperationType operationType, Action`1 progress, CancellationToken cancellationToken)\r\n   at EFCore.BulkExtensions.DbContextBulkTransaction.ExecuteAsync[T](DbContext context, Type type, IEnumerable`1 entities, OperationType operationType, BulkConfig bulkConfig, Action`1 progress, CancellationToken cancellationToken)\r\n   at SIM.Logic.ImportLogic.InsertOrUpdateBulk(List`1 items) in F:\\SIM\\SIM.Lib\\Logic\\Implementiation\\ImportLogic.cs:line 286\r\n   at SIM.Logic.ImportLogic.InsertOrUpdateGiantGear() in F:\\SIM\\SIM.Lib\\Logic\\Implementiation\\ImportLogic.cs:line 85\r\n   at SIM.Logic.ImportLogic.ImportGiant(GiantProductType type, Int32 year) in F:\\SIM\\SIM.Lib\\Logic\\Implementiation\\ImportLogic.cs:line 52\r\n   at SIM.Controllers.ImportController.Giant(GiantProductType type, Years year) in F:\\SIM\\SIMAPI\\Controllers\\ImportController.cs:line 35\r\n   at lambda_method82(Closure, Object)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Server.IIS.Core.IISHttpContextOfT`1.ProcessRequestAsync()\r\nClientConnectionId:c9592033-15a6-4fc8-8935-b1579ddb519c\r\nError Number:8672,State:1,Class:16","Properties":{"ConnectionId":"18374686480476930054","TraceIdentifier":"4000000d-0000-ff00-b63f-84710c7967bb","EventId":{"Id":2,"Name":"ApplicationError"},"SourceContext":"Microsoft.AspNetCore.Server.IIS.Core.IISHttpServer","SpanId":"78b0e9a7ced9df77","TraceId":"15755257c7ae54a5c73da94ea69f1076","ParentId":"0000000000000000","RequestId":"4000000d-0000-ff00-b63f-84710c7967bb","RequestPath":"/api/Import/Giant","ApplicationName":"Supplier Integration Module"}}
